{"ast":null,"code":"var _jsxFileName = \"/home/atiakhan/Documents/capstone new/peaceofmind/src/components/ForgetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { object, string } from \"zod\";\nimport { toast } from \"react-toastify\";\nimport useStore from \"../store\";\nimport { authApi } from \"../api/authApi\";\nimport { GenericResponse } from \"../api/types\";\nimport FormInput from \"../components/FormInput\";\nimport LoadingButton from \"../components/LoadingButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst forgotPasswordSchema = object({\n  email: string().min(1, \"Email is required\").email(\"Invalid email address\")\n});\nconst ForgotPassword = () => {\n  _s();\n  const store = useStore();\n  const methods = useForm({\n    resolver: zodResolver(forgotPasswordSchema)\n  });\n  const {\n    reset,\n    handleSubmit,\n    formState: {\n      isSubmitSuccessful\n    }\n  } = methods;\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSubmitSuccessful]);\n  const forgotPassword = async data => {\n    try {\n      store.setRequestLoading(true);\n      const response = await authApi.post(\"auth/forgotpassword\", data);\n      store.setRequestLoading(false);\n      toast.success(response.data.message, {\n        position: \"top-right\"\n      });\n    } catch (error) {\n      store.setRequestLoading(false);\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      toast.error(resMessage, {\n        position: \"top-right\"\n      });\n    }\n  };\n  const onSubmitHandler = values => {\n    forgotPassword(values);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-ct-blue-600 min-h-screen grid place-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl xl:text-6xl text-center font-[600] text-ct-yellow-600 mb-7\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormProvider, {\n        ...methods,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmitHandler),\n          className: \"max-w-md w-full mx-auto overflow-hidden shadow-lg bg-ct-dark-200 rounded-2xl p-8 space-y-5\",\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"Email Address\",\n            name: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            loading: store.requestLoading,\n            textColor: \"text-ct-blue-600\",\n            children: \"Send Reset Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"9xTvxhCkQE9E13Ni05QxjnyrOKY=\", false, function () {\n  return [useStore, useForm];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useEffect","useForm","FormProvider","zodResolver","object","string","toast","useStore","authApi","GenericResponse","FormInput","LoadingButton","jsxDEV","_jsxDEV","forgotPasswordSchema","email","min","ForgotPassword","_s","store","methods","resolver","reset","handleSubmit","formState","isSubmitSuccessful","forgotPassword","data","setRequestLoading","response","post","success","message","position","error","resMessage","toString","onSubmitHandler","values","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","name","type","loading","requestLoading","textColor","_c","$RefreshReg$"],"sources":["/home/atiakhan/Documents/capstone new/peaceofmind/src/components/ForgetPassword.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { object, string } from \"zod\";\nimport { toast } from \"react-toastify\";\nimport useStore from \"../store\";\nimport { authApi } from \"../api/authApi\";\nimport { GenericResponse } from \"../api/types\";\nimport FormInput from \"../components/FormInput\";\nimport LoadingButton from \"../components/LoadingButton\";\n\nconst forgotPasswordSchema = object({\n  email: string().min(1, \"Email is required\").email(\"Invalid email address\"),\n});\n\nconst ForgotPassword = () => {\n  const store = useStore();\n  const methods = useForm({\n    resolver: zodResolver(forgotPasswordSchema),\n  });\n\n  const {\n    reset,\n    handleSubmit,\n    formState: { isSubmitSuccessful },\n  } = methods;\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSubmitSuccessful]);\n\n  const forgotPassword = async (data) => {\n    try {\n      store.setRequestLoading(true);\n      const response = await authApi.post(\"auth/forgotpassword\", data);\n      store.setRequestLoading(false);\n      toast.success(response.data.message, {\n        position: \"top-right\",\n      });\n    } catch (error) {\n      store.setRequestLoading(false);\n      const resMessage =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      toast.error(resMessage, {\n        position: \"top-right\",\n      });\n    }\n  };\n\n  const onSubmitHandler = (values) => {\n    forgotPassword(values);\n  };\n\n  return (\n    <section className=\"bg-ct-blue-600 min-h-screen grid place-items-center\">\n      <div className=\"w-full\">\n        <h1 className=\"text-4xl xl:text-6xl text-center font-[600] text-ct-yellow-600 mb-7\">\n          Forgot Password\n        </h1>\n        <FormProvider {...methods}>\n          <form\n            onSubmit={handleSubmit(onSubmitHandler)}\n            className=\"max-w-md w-full mx-auto overflow-hidden shadow-lg bg-ct-dark-200 rounded-2xl p-8 space-y-5\"\n          >\n            <FormInput label=\"Email Address\" name=\"email\" type=\"email\" />\n            <LoadingButton\n              loading={store.requestLoading}\n              textColor=\"text-ct-blue-600\"\n            >\n              Send Reset Code\n            </LoadingButton>\n          </form>\n        </FormProvider>\n      </div>\n    </section>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}